// apps/event-service/prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("EVENT_DATABASE_URL")
}

model Event {
  id          String      @id @default(cuid())
  title       String
  description String?
  startDate   DateTime    @map("start_date")
  endDate     DateTime    @map("end_date")
  status      EventStatus @default(DRAFT)
  imageUrl    String?     @map("image_url")
  organizerId String      @map("organizer_id") // Reference to User Service
  venueId     String      @map("venue_id")
  categoryId  String      @map("category_id")
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")

  // Relations
  venue    Venue    @relation(fields: [venueId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])

  @@map("events")
}

model Venue {
  id          String  @id @default(cuid())
  name        String
  address     String
  city        String
  country     String
  capacity    Int
  description String?
  imageUrl    String? @map("image_url")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // Relations
  events Event[]

  @@map("venues")
}

model Category {
  id          String  @id @default(cuid())
  name        String  @unique
  description String?
  color       String? // For UI display
  icon        String? // For UI display
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // Relations
  events Event[]

  @@map("categories")
}

enum EventStatus {
  DRAFT
  PUBLISHED
  LIVE
  SOLD_OUT
  CANCELLED
  COMPLETED
}